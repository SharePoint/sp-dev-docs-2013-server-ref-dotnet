<Type Name="DocumentSet" FullName="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet">
  <TypeSignature Language="C#" Value="public class DocumentSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DocumentSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" />
  <TypeSignature Language="VB.NET" Value="Public Class DocumentSet" />
  <TypeSignature Language="C++ CLI" Value="public ref class DocumentSet" />
  <TypeSignature Language="F#" Value="type DocumentSet = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Client.ClientCallableType(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful, ServerTypeId="E32A87F7-B866-407D-971D-027ED940D50F")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object on a SharePoint Server publishing site.</summary>
    <remarks>
      <para>A document set is a special kind of folder that allows tracking and using of a collection of documents as a single work item. It behaves like an item in a Document Library.</para>
      <para>The <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> class wraps an <see cref="T:Microsoft.SharePoint.SPFolder" /> object. It exposes the underlying <see cref="T:Microsoft.Office.SPFolder" /> (<see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSetFolder" />) directly, and also exposes its <see cref="T:Microsoft.SharePoint.SPItem" /> object (<see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Item" />) so that their functionality can be accessed easily.You can initialize a new instance of this object by using the static <see cref="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.GetDocumentSet(SPFolder)" /> method, or by using the static <see cref="M:Microsoft.Office.DocumentManagement.DocumentSetsDocumentSet.Create(SPFolder,string,SPContentTypeId,System.Collections.Hashtable)" /> method or one of its overloads to create a document set.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DocumentSet (Microsoft.SharePoint.SPFolder folder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.SPFolder folder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.#ctor(Microsoft.SharePoint.SPFolder)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (folder As SPFolder)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DocumentSet(Microsoft::SharePoint::SPFolder ^ folder);" />
      <MemberSignature Language="F#" Value="new Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet : Microsoft.SharePoint.SPFolder -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="new Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet folder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="folder" Type="Microsoft.SharePoint.SPFolder" />
      </Parameters>
      <Docs>
        <param name="folder">
          <see cref="T:Microsoft.SharePoint.SPFolder" /> object.</param>
        <summary>Initializes a new instance of a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DocumentSet (Microsoft.SharePoint.SPFolder folder, Microsoft.SharePoint.SPListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.SPFolder folder, class Microsoft.SharePoint.SPListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.#ctor(Microsoft.SharePoint.SPFolder,Microsoft.SharePoint.SPListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (folder As SPFolder, item As SPListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DocumentSet(Microsoft::SharePoint::SPFolder ^ folder, Microsoft::SharePoint::SPListItem ^ item);" />
      <MemberSignature Language="F#" Value="new Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet : Microsoft.SharePoint.SPFolder * Microsoft.SharePoint.SPListItem -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="new Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet (folder, item)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="folder" Type="Microsoft.SharePoint.SPFolder" />
        <Parameter Name="item" Type="Microsoft.SharePoint.SPListItem" />
      </Parameters>
      <Docs>
        <param name="folder">
          <see cref="T:Microsoft.SharePoint.SPFolder" /> object.</param>
        <param name="item">
          <see cref="T:Microsoft.SharePoint.SPListItem" /> object.</param>
        <summary>Initializes a new instance of a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.SPContentType ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.SPContentType ContentType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As SPContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::SPContentType ^ ContentType { Microsoft::SharePoint::SPContentType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : Microsoft.SharePoint.SPContentType" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.SPContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the content type for the document set.</summary>
        <value>The content type for the document set.</value>
        <remarks>
          <para>This property is the same as to <b>DocumentSet.Item.ContentType.SPContentType</b> for the current document set.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.DocumentManagement.DocumentSets.DocumentSetTemplate ContentTypeTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSetTemplate ContentTypeTemplate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.ContentTypeTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypeTemplate As DocumentSetTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::DocumentManagement::DocumentSets::DocumentSetTemplate ^ ContentTypeTemplate { Microsoft::Office::DocumentManagement::DocumentSets::DocumentSetTemplate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTypeTemplate : Microsoft.Office.DocumentManagement.DocumentSets.DocumentSetTemplate" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.ContentTypeTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSetTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the content type template associated with this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <value>The content type template associated with this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static string Create (Microsoft.SharePoint.SPFolder parentFolder, string name, Microsoft.SharePoint.SPContentTypeId ctid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Create(class Microsoft.SharePoint.SPFolder parentFolder, string name, valuetype Microsoft.SharePoint.SPContentTypeId ctid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Create(Microsoft.SharePoint.SPFolder,System.String,Microsoft.SharePoint.SPContentTypeId)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (parentFolder As SPFolder, name As String, ctid As SPContentTypeId) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Create(Microsoft::SharePoint::SPFolder ^ parentFolder, System::String ^ name, Microsoft::SharePoint::SPContentTypeId ctid);" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.SharePoint.SPFolder * string * Microsoft.SharePoint.SPContentTypeId -&gt; string" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Create (parentFolder, name, ctid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableExceptionConstraint(Condition="Cannot create document set because another file or folder with this name already exists.", ErrorType=typeof(System.InvalidOperationException), FixedId="InvalidOperationException")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.ClientCallableMethod(ClientLibraryTargets=Microsoft.SharePoint.Client.ClientLibraryTargets.NonRESTful)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentFolder" Type="Microsoft.SharePoint.SPFolder">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="name" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotEmpty)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="ctid" Type="Microsoft.SharePoint.SPContentTypeId">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.SharePoint.Client.ClientCallableConstraint(Type=Microsoft.SharePoint.Client.ClientCallableConstraintType.NotNull)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parentFolder">The folder in which to create the new <b>DocumentSet</b> object.</param>
        <param name="name">The name of the new <b>DocumentSet</b> object.</param>
        <param name="ctid">The ID of the content type to be used for the new document set to be created. The ID must be a content type that inherits from the base <b>DocumentSet</b> content type.</param>
        <summary>Creates a new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <returns>The URL to the new <b>DocumentSet</b> object.</returns>
        <remarks>
          <para>This version of the <b>Create</b> method always provisions default contents for the content type, if any.
</para>
          <para>This method tries to assign any values found in the hash table to the appropriate fields in the new <b>DocumentSet</b> object. The values are copied to the new object only if they are valid fields present in the content type. Values for unknown fields are ignored.</para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentNullException">The parent folder parameter is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">A folder with that name already exists.</exception>
        <example>
          <para>             using System;
             using System.Collections.Generic;
             using System.Linq;
             using System.Text;
             using Microsoft.SharePoint.Client;
             using Microsoft.SharePoint.Client.DocumentSet;
            
            
             namespace ConsoleApplication1
             {
                class Program
                {
                    static void Main(string[] args)
                    {
                        ClientContext ctx = new ClientContext("http://localhost/");
            
                        Web targetWeb = ctx.Web;
                        List targetList = targetWeb.Lists.GetByTitle("docsets");
            
                        ContentTypeCollection listContentTypes = targetList.ContentTypes;
                        ctx.Load(listContentTypes, types =&gt; types.Include
                                               (type =&gt; type.Id, type =&gt; type.Name,
                                               type =&gt; type.Parent));
            
                        var result = ctx.LoadQuery(listContentTypes.Where
                                (c =&gt; c.Name == "Document Set"));
            
                        ctx.ExecuteQuery();
            
                        ContentType docsetCT = result.First();
            
                        ContentTypeId ctid = docsetCT.Id;
            
                        DocumentSet.Create(ctx, targetList.RootFolder, "wsDocset", ctid);
            
                        ctx.ExecuteQuery();
                    }
                }
             }</para>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Create (Microsoft.SharePoint.SPFolder parentFolder, string name, Microsoft.SharePoint.SPContentTypeId ctid, System.Collections.Hashtable properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Create(class Microsoft.SharePoint.SPFolder parentFolder, string name, valuetype Microsoft.SharePoint.SPContentTypeId ctid, class System.Collections.Hashtable properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Create(Microsoft.SharePoint.SPFolder,System.String,Microsoft.SharePoint.SPContentTypeId,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (parentFolder As SPFolder, name As String, ctid As SPContentTypeId, properties As Hashtable) As DocumentSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::DocumentManagement::DocumentSets::DocumentSet ^ Create(Microsoft::SharePoint::SPFolder ^ parentFolder, System::String ^ name, Microsoft::SharePoint::SPContentTypeId ctid, System::Collections::Hashtable ^ properties);" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.SharePoint.SPFolder * string * Microsoft.SharePoint.SPContentTypeId * System.Collections.Hashtable -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Create (parentFolder, name, ctid, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentFolder" Type="Microsoft.SharePoint.SPFolder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ctid" Type="Microsoft.SharePoint.SPContentTypeId" />
        <Parameter Name="properties" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="parentFolder">The folder that contains the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <param name="name">The name of the new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <param name="ctid">The content type identifier on which to base the new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <param name="properties">The properties of the new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <summary>Creates a new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <returns>The new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</returns>
        <remarks>
          <para>This version of the Create method always provisions default contents for the content type, if default contents exist.</para>
          <para>This method tries to assign any values found in the hash table to the appropriate fields in the new <b>DocumentSet</b> object. The values are copied to the new object only if they are valid fields present in the content type. Values for unknown fields are ignored.</para>
          <para />
        </remarks>
        <example>
          <para>The code example creates a new document set in the root folder of a specified list. The example assumes that the Description and Project Client columns used in the properties hash table are already defined at the site level.</para>
          <para>Namespace references:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="N:Microsoft.Office.DocumentManagement.DocumentSets" />
              </description>
            </item>
            <item>
              <description>
                <see cref="N:Microsoft.SharePoint" />
              </description>
            </item>
            <item>
              <description>
                <see cref="N:System.Web" />
              </description>
            </item>
          </list>
          <code>            //Get the folder into which to insert the document set.
            SPWeb web = new SPSite("&lt;span class="placeholder"&gt;URL_of_Site_for_DocSet&lt;/span&gt;").OpenWeb();
            SPList list = web.Lists["&lt;span class="placeholder"&gt;List_Name_for_DocSet&lt;/span&gt;"];
            SPFolder folderToInsertIn = list.RootFolder;

            //Get the content type ID for the specified document set content type.
            SPContentTypeId dsCtId = new SPContentTypeId();
            dsCtId = list.ContentTypes["&lt;span class="placeholder"&gt;DocumentSet_ContentType_Name&lt;/span&gt;"].Id;

            // Create the Document Set Properties HashTable
            Hashtable properties = new Hashtable();
            properties.Add("Description", "Project Description");
            properties.Add("Project Client", "AdventureWorks");

            //Create the new Document Set object.
            DocumentSet.Create(folderToInsertIn, "&lt;span class="placeholder"&gt;New_DocumentSet_Name&lt;/span&gt;", dsCtId, properties, true);
</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Create (Microsoft.SharePoint.SPFolder parentFolder, string name, Microsoft.SharePoint.SPContentTypeId ctid, System.Collections.Hashtable properties, bool bProvisionDefaultContent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Create(class Microsoft.SharePoint.SPFolder parentFolder, string name, valuetype Microsoft.SharePoint.SPContentTypeId ctid, class System.Collections.Hashtable properties, bool bProvisionDefaultContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Create(Microsoft.SharePoint.SPFolder,System.String,Microsoft.SharePoint.SPContentTypeId,System.Collections.Hashtable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (parentFolder As SPFolder, name As String, ctid As SPContentTypeId, properties As Hashtable, bProvisionDefaultContent As Boolean) As DocumentSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::DocumentManagement::DocumentSets::DocumentSet ^ Create(Microsoft::SharePoint::SPFolder ^ parentFolder, System::String ^ name, Microsoft::SharePoint::SPContentTypeId ctid, System::Collections::Hashtable ^ properties, bool bProvisionDefaultContent);" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.SharePoint.SPFolder * string * Microsoft.SharePoint.SPContentTypeId * System.Collections.Hashtable * bool -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Create (parentFolder, name, ctid, properties, bProvisionDefaultContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentFolder" Type="Microsoft.SharePoint.SPFolder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ctid" Type="Microsoft.SharePoint.SPContentTypeId" />
        <Parameter Name="properties" Type="System.Collections.Hashtable" />
        <Parameter Name="bProvisionDefaultContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentFolder">The folder that contains the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <param name="name">The name of the new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <param name="ctid">The content type identifier on which to base the new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <param name="properties">The properties of the new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <param name="bProvisionDefaultContent">
          <b>true</b> to provision the default content for the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object; otherwise, <b>false</b>.</param>
        <summary>Creates a new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <returns>The new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</returns>
        <remarks>
          <para>This version of the <b>Create</b> method always provisions default contents for the content type , if there are any. It tries to assign any values found in the hash table to the appropriate fields in the new DocumentSet object. The values are copied to the new object only if they are valid fields in the content type. Values for unknown fields are ignored.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Create (Microsoft.SharePoint.SPFolder parentFolder, string name, Microsoft.SharePoint.SPContentTypeId ctid, System.Collections.Hashtable properties, bool bProvisionDefaultContent, Microsoft.SharePoint.SPUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Create(class Microsoft.SharePoint.SPFolder parentFolder, string name, valuetype Microsoft.SharePoint.SPContentTypeId ctid, class System.Collections.Hashtable properties, bool bProvisionDefaultContent, class Microsoft.SharePoint.SPUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Create(Microsoft.SharePoint.SPFolder,System.String,Microsoft.SharePoint.SPContentTypeId,System.Collections.Hashtable,System.Boolean,Microsoft.SharePoint.SPUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (parentFolder As SPFolder, name As String, ctid As SPContentTypeId, properties As Hashtable, bProvisionDefaultContent As Boolean, user As SPUser) As DocumentSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::DocumentManagement::DocumentSets::DocumentSet ^ Create(Microsoft::SharePoint::SPFolder ^ parentFolder, System::String ^ name, Microsoft::SharePoint::SPContentTypeId ctid, System::Collections::Hashtable ^ properties, bool bProvisionDefaultContent, Microsoft::SharePoint::SPUser ^ user);" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.SharePoint.SPFolder * string * Microsoft.SharePoint.SPContentTypeId * System.Collections.Hashtable * bool * Microsoft.SharePoint.SPUser -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Create (parentFolder, name, ctid, properties, bProvisionDefaultContent, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentFolder" Type="Microsoft.SharePoint.SPFolder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ctid" Type="Microsoft.SharePoint.SPContentTypeId" />
        <Parameter Name="properties" Type="System.Collections.Hashtable" />
        <Parameter Name="bProvisionDefaultContent" Type="System.Boolean" />
        <Parameter Name="user" Type="Microsoft.SharePoint.SPUser" />
      </Parameters>
      <Docs>
        <param name="parentFolder">The <see cref="T:Microsoft.SharePoint.SPFolder" /> object to which the <see cref="DocumentSet" /> object is to be imported</param>
        <param name="name">The name of the new <b>DocumentSet</b> object</param>
        <param name="ctid">The ID of the content type to use for creating the new <b>DocumentSet</b> object</param>
        <param name="properties">The collection of property values to be assigned to the new fields of the DocumentSet object</param>
        <param name="bProvisionDefaultContent">true if default documents will be provisioned for the new <b>DocumentSet</b> object</param>
        <param name="user">The user to set as the Author of the new <b>DocumentSet</b></param>
        <summary>Creates a new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <returns>Returns <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /></returns>
        <remarks>
          <para>This method will try to assign any values found in the hashtable to the appropiate fields in the new <b>DocumentSet</b> object, the values will be copied to the new object only if they are valid fields present in the Content Type, values for unknown fields will be ignored.</para>
          <para>The <paramref name="ctid" /> parameter must be a content type that inherits from the base <b>DocumentSet</b> content type</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public byte[] Export ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Export() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Export" />
      <MemberSignature Language="VB.NET" Value="Public Function Export () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Export();" />
      <MemberSignature Language="F#" Value="member this.Export : unit -&gt; byte[]" Usage="documentSet.Export " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Packages and exports a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object as a single compressed file.</summary>
        <returns>The resulting file as a byte array.Exports the whole document set as a byte array. For use with streams, use one of the overloads with a <paramref name="stream" /> parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Export(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Export : System.IO.Stream -&gt; unit" Usage="documentSet.Export stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream into which the method writes a <see cref="T:System.IO.Packaging.Package" /> representation of the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <summary>Packages and exports a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.IO.Stream stream, uint maxMBDocSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.IO.Stream stream, unsigned int32 maxMBDocSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Export(System.IO.Stream,System.UInt32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::IO::Stream ^ stream, System::UInt32 maxMBDocSet);" />
      <MemberSignature Language="F#" Value="member this.Export : System.IO.Stream * uint32 -&gt; unit" Usage="documentSet.Export (stream, maxMBDocSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="maxMBDocSet" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="stream">The output stream to which the file will be written</param>
        <param name="maxMBDocSet">The size limit of the export in megabytes</param>
        <summary>Packages and exports a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object as a single compressed file.</summary>
        <remarks>
          <para>If the resulting file will be larger than the size limit for export defined by the <paramref name="maxMBDocSet" /> parameter, an exception will be thrown.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindParentDocumentSet">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet FindParentDocumentSet (Microsoft.SharePoint.SPListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet FindParentDocumentSet(class Microsoft.SharePoint.SPListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.FindParentDocumentSet(Microsoft.SharePoint.SPListItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindParentDocumentSet (item As SPListItem) As DocumentSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::DocumentManagement::DocumentSets::DocumentSet ^ FindParentDocumentSet(Microsoft::SharePoint::SPListItem ^ item);" />
      <MemberSignature Language="F#" Value="static member FindParentDocumentSet : Microsoft.SharePoint.SPListItem -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.FindParentDocumentSet item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.SharePoint.SPListItem" />
      </Parameters>
      <Docs>
        <param name="item">The <see cref="T:Microsoft.SharePoint.SPListItem" /> object for which the parent document set is to be found.</param>
        <summary>Attempts to find the parent Document Set of the passed in item.</summary>
        <returns>The <b>DocumentSet</b> object that represents the parent <b>DocumentSet</b> or a null reference (Nothing in Visual Basic) if none was found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Folder">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.SPFolder Folder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.SPFolder Folder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Folder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Folder As SPFolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::SPFolder ^ Folder { Microsoft::SharePoint::SPFolder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Folder : Microsoft.SharePoint.SPFolder" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Folder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.SPFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:Microsoft.SharePoint.SPFolder" /> object that is associated with this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <value>The <see cref="T:Microsoft.SharePoint.SPFolder" /> object for this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</value>
        <remarks>
          <para>This is the actual folder that is the document set, not the one that contains it. For the folder that contains the document set, see <see cref="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.ParentFolder" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentSet">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet GetDocumentSet (Microsoft.SharePoint.SPFolder folder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet GetDocumentSet(class Microsoft.SharePoint.SPFolder folder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.GetDocumentSet(Microsoft.SharePoint.SPFolder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDocumentSet (folder As SPFolder) As DocumentSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::DocumentManagement::DocumentSets::DocumentSet ^ GetDocumentSet(Microsoft::SharePoint::SPFolder ^ folder);" />
      <MemberSignature Language="F#" Value="static member GetDocumentSet : Microsoft.SharePoint.SPFolder -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.GetDocumentSet folder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="Microsoft.SharePoint.SPFolder" />
      </Parameters>
      <Docs>
        <param name="folder">The folder from which to retrieve the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" />.</param>
        <summary>Gets the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object from a specified <see cref="T:Microsoft.SharePoint.SPFolder" /> object.</summary>
        <returns>The <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Import (byte[] archiveData, string archiveName, Microsoft.SharePoint.SPFolder parentFolder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Import(unsigned int8[] archiveData, string archiveName, class Microsoft.SharePoint.SPFolder parentFolder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Import(System.Byte[],System.String,Microsoft.SharePoint.SPFolder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Import (archiveData As Byte(), archiveName As String, parentFolder As SPFolder) As DocumentSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::DocumentManagement::DocumentSets::DocumentSet ^ Import(cli::array &lt;System::Byte&gt; ^ archiveData, System::String ^ archiveName, Microsoft::SharePoint::SPFolder ^ parentFolder);" />
      <MemberSignature Language="F#" Value="static member Import : byte[] * string * Microsoft.SharePoint.SPFolder -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Import (archiveData, archiveName, parentFolder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveData" Type="System.Byte[]" />
        <Parameter Name="archiveName" Type="System.String" />
        <Parameter Name="parentFolder" Type="Microsoft.SharePoint.SPFolder" />
      </Parameters>
      <Docs>
        <param name="archiveData">An array that contains a <see cref="T:System.IO.Packaging.Package" /> representation of the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object to be imported.</param>
        <param name="archiveName">The name of the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object to be created.</param>
        <param name="parentFolder">The name of the folder in which to place the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</param>
        <summary>Imports a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <returns>The new <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</returns>
        <remarks>
          <para>This function expects a file that was created by using the <see cref="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Export" /> method.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Import (byte[] archiveData, string archiveName, Microsoft.SharePoint.SPFolder parentFolder, Microsoft.SharePoint.SPContentTypeId docsetContentTypeId, System.Collections.Hashtable properties, Microsoft.SharePoint.SPUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Import(unsigned int8[] archiveData, string archiveName, class Microsoft.SharePoint.SPFolder parentFolder, valuetype Microsoft.SharePoint.SPContentTypeId docsetContentTypeId, class System.Collections.Hashtable properties, class Microsoft.SharePoint.SPUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Import(System.Byte[],System.String,Microsoft.SharePoint.SPFolder,Microsoft.SharePoint.SPContentTypeId,System.Collections.Hashtable,Microsoft.SharePoint.SPUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Import (archiveData As Byte(), archiveName As String, parentFolder As SPFolder, docsetContentTypeId As SPContentTypeId, properties As Hashtable, user As SPUser) As DocumentSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::DocumentManagement::DocumentSets::DocumentSet ^ Import(cli::array &lt;System::Byte&gt; ^ archiveData, System::String ^ archiveName, Microsoft::SharePoint::SPFolder ^ parentFolder, Microsoft::SharePoint::SPContentTypeId docsetContentTypeId, System::Collections::Hashtable ^ properties, Microsoft::SharePoint::SPUser ^ user);" />
      <MemberSignature Language="F#" Value="static member Import : byte[] * string * Microsoft.SharePoint.SPFolder * Microsoft.SharePoint.SPContentTypeId * System.Collections.Hashtable * Microsoft.SharePoint.SPUser -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Import (archiveData, archiveName, parentFolder, docsetContentTypeId, properties, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveData" Type="System.Byte[]" />
        <Parameter Name="archiveName" Type="System.String" />
        <Parameter Name="parentFolder" Type="Microsoft.SharePoint.SPFolder" />
        <Parameter Name="docsetContentTypeId" Type="Microsoft.SharePoint.SPContentTypeId" />
        <Parameter Name="properties" Type="System.Collections.Hashtable" />
        <Parameter Name="user" Type="Microsoft.SharePoint.SPUser" />
      </Parameters>
      <Docs>
        <param name="archiveData">Byte array of the file to import the <b>DocumentSet</b> from.</param>
        <param name="archiveName">The name of the <b>DocumentSet</b> to import, which will also be the name of this <b>DocumentSet</b></param>
        <param name="parentFolder">The <see cref="T:Microsoft.SharePoint.SPFolder" /> object to which the <see cref="DocumentSet" /> object is to be imported.</param>
        <param name="docsetContentTypeId">The <see cref="T:Microsoft.SharePoint.SPContentTypeId" /> object to use the import</param>
        <param name="properties">A collection of properties to set on the <b>DocumentSet</b> after import</param>
        <param name="user">The <see cref="T:Microsoft.SharePoint.SPUser" /> to set as the owner and author of the imported <b>DocumentSet</b></param>
        <summary>Imports a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <returns>Returns <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" />.</returns>
        <remarks>
          <para>This function expects a file that was created using the <b>DocumentSet.Export</b> method.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public static Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Import (System.IO.Stream archiveStream, string archiveName, Microsoft.SharePoint.SPFolder parentFolder, Microsoft.SharePoint.SPContentTypeId docsetContentTypeId, System.Collections.Hashtable properties, Microsoft.SharePoint.SPUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet Import(class System.IO.Stream archiveStream, string archiveName, class Microsoft.SharePoint.SPFolder parentFolder, valuetype Microsoft.SharePoint.SPContentTypeId docsetContentTypeId, class System.Collections.Hashtable properties, class Microsoft.SharePoint.SPUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Import(System.IO.Stream,System.String,Microsoft.SharePoint.SPFolder,Microsoft.SharePoint.SPContentTypeId,System.Collections.Hashtable,Microsoft.SharePoint.SPUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Import (archiveStream As Stream, archiveName As String, parentFolder As SPFolder, docsetContentTypeId As SPContentTypeId, properties As Hashtable, user As SPUser) As DocumentSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Office::DocumentManagement::DocumentSets::DocumentSet ^ Import(System::IO::Stream ^ archiveStream, System::String ^ archiveName, Microsoft::SharePoint::SPFolder ^ parentFolder, Microsoft::SharePoint::SPContentTypeId docsetContentTypeId, System::Collections::Hashtable ^ properties, Microsoft::SharePoint::SPUser ^ user);" />
      <MemberSignature Language="F#" Value="static member Import : System.IO.Stream * string * Microsoft.SharePoint.SPFolder * Microsoft.SharePoint.SPContentTypeId * System.Collections.Hashtable * Microsoft.SharePoint.SPUser -&gt; Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Import (archiveStream, archiveName, parentFolder, docsetContentTypeId, properties, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveStream" Type="System.IO.Stream" />
        <Parameter Name="archiveName" Type="System.String" />
        <Parameter Name="parentFolder" Type="Microsoft.SharePoint.SPFolder" />
        <Parameter Name="docsetContentTypeId" Type="Microsoft.SharePoint.SPContentTypeId" />
        <Parameter Name="properties" Type="System.Collections.Hashtable" />
        <Parameter Name="user" Type="Microsoft.SharePoint.SPUser" />
      </Parameters>
      <Docs>
        <param name="archiveStream">The file stream of the file from which to import the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" />, which will be the name of that <b>DocumentSet</b> when it is created</param>
        <param name="archiveName">Name of the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object to import</param>
        <param name="parentFolder">The <see cref="T:Microsoft.SharePoint.SPFolder" /> to which the <b>DocumentSet</b> is to be imported</param>
        <param name="docsetContentTypeId">The <see cref="T:Microsoft.SPContentTypeId" /> object to use for the import</param>
        <param name="properties">A collection of properties to be set on the <see cref="DocumentSet" /> after the import</param>
        <param name="user">The <see cref="T:Microsoft.SharePoint.SPUser" /> object to set as the owner and author of the imported <b>DocumentSet</b></param>
        <summary>Imports a <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Import(System.IO.Stream,System.String,Microsoft.SharePoint.SPFolder,Microsoft.SharePoint.SPContentTypeId,System.Collections.Hashtable,Microsoft.SharePoint.SPSite)" /> object.</summary>
        <returns>Returns <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object resulting from the <see cref="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Import(System.IO.Stream,System.String,Microsoft.SharePoint.SPFolder,Microsoft.SharePoint.SPContentTypeId,System.Collections.Hashtable,Microsoft.SharePoint.SPUser)" /> method.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.SPListItem Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.SPListItem Item" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As SPListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::SPListItem ^ Item { Microsoft::SharePoint::SPListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : Microsoft.SharePoint.SPListItem" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.SPListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:Microsoft.SharePoint.SPListItem" /> object that is associated with this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <value>The <see cref="T:Microsoft.SharePoint.SPListItem" /> object that is associated with this <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentFolder">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.SPFolder ParentFolder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.SPFolder ParentFolder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.ParentFolder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentFolder As SPFolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::SPFolder ^ ParentFolder { Microsoft::SharePoint::SPFolder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentFolder : Microsoft.SharePoint.SPFolder" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.ParentFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.SPFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:Microsoft.SharePoint.SPFolder" /> object that contains the <see cref="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <value>The parent <see cref="T:Microsoft.SharePoint.SPFolder" /> object of the <see cref="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentList">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.SPList ParentList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.SPList ParentList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.ParentList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentList As SPList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::SPList ^ ParentList { Microsoft::SharePoint::SPList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentList : Microsoft.SharePoint.SPList" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.ParentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.SPList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent list of the <see cref="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <value>
          <see cref="T:Microsoft.SharePoint.SPList" /> object of the list that contains the <see cref="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provision">
      <MemberSignature Language="C#" Value="public void Provision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Provision() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Provision" />
      <MemberSignature Language="VB.NET" Value="Public Sub Provision ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Provision();" />
      <MemberSignature Language="F#" Value="member this.Provision : unit -&gt; unit" Usage="documentSet.Provision " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Updates the schema of the document set item and its parent list.</summary>
        <remarks>
          <para>Updates the document set item with any changes made to allowed content types for its content type. The method also adds the newly added content types to the list so that they are allowed in it. </para>
          <para />
        </remarks>
        <exception cref="T:Microsoft.SharePoint.Exception">A file with a name equal to one of the default documents already exists in the document set.</exception>
      </Docs>
    </Member>
    <Member MemberName="Provision">
      <MemberSignature Language="C#" Value="public void Provision (bool bProvisionDefaultContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Provision(bool bProvisionDefaultContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.Provision(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Provision (bProvisionDefaultContent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Provision(bool bProvisionDefaultContent);" />
      <MemberSignature Language="F#" Value="member this.Provision : bool -&gt; unit" Usage="documentSet.Provision bProvisionDefaultContent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bProvisionDefaultContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bProvisionDefaultContent">
          <b>true</b> if the default documents for the content type will be added to the document set as part of provisioning. If the documents already exist, then an exception is thrown.</param>
        <summary>Updates the schema of the document set item and its parent list.</summary>
        <remarks>
          <para>This method updates the document set item with any changes made to allowed content types for its content type. It also adds the newly added content types to the list so that they are allowed in it. </para>
          <para />
        </remarks>
        <exception cref="T:Microsoft.SharePoint.SPException">A file with a name equal to one of the default documents already exists in the document set.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendToOfficialFile">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.OfficialFileResult SendToOfficialFile (string strRecordSeries, out string strAdditionalInfo, Microsoft.SharePoint.SPOfficialFileHost targetHost, string submitter, Microsoft.SharePoint.SPOfficialFileSubmissionMode submissionMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.SharePoint.OfficialFileResult SendToOfficialFile(string strRecordSeries, [out] string&amp; strAdditionalInfo, class Microsoft.SharePoint.SPOfficialFileHost targetHost, string submitter, valuetype Microsoft.SharePoint.SPOfficialFileSubmissionMode submissionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.SendToOfficialFile(System.String,System.String@,Microsoft.SharePoint.SPOfficialFileHost,System.String,Microsoft.SharePoint.SPOfficialFileSubmissionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendToOfficialFile (strRecordSeries As String, ByRef strAdditionalInfo As String, targetHost As SPOfficialFileHost, submitter As String, submissionMode As SPOfficialFileSubmissionMode) As OfficialFileResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::SharePoint::OfficialFileResult SendToOfficialFile(System::String ^ strRecordSeries, [Runtime::InteropServices::Out] System::String ^ % strAdditionalInfo, Microsoft::SharePoint::SPOfficialFileHost ^ targetHost, System::String ^ submitter, Microsoft::SharePoint::SPOfficialFileSubmissionMode submissionMode);" />
      <MemberSignature Language="F#" Value="member this.SendToOfficialFile : string *  * Microsoft.SharePoint.SPOfficialFileHost * string * Microsoft.SharePoint.SPOfficialFileSubmissionMode -&gt; Microsoft.SharePoint.OfficialFileResult" Usage="documentSet.SendToOfficialFile (strRecordSeries, strAdditionalInfo, targetHost, submitter, submissionMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.OfficialFileResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strRecordSeries" Type="System.String" />
        <Parameter Name="strAdditionalInfo" Type="System.String" RefType="out" />
        <Parameter Name="targetHost" Type="Microsoft.SharePoint.SPOfficialFileHost" />
        <Parameter Name="submitter" Type="System.String" />
        <Parameter Name="submissionMode" Type="Microsoft.SharePoint.SPOfficialFileSubmissionMode" />
      </Parameters>
      <Docs>
        <param name="strRecordSeries">The content type of the file created at the target</param>
        <param name="strAdditionalInfo">A reference to a string where supplemental information from the operation will be placed.</param>
        <param name="targetHost">An object that represents the external connection to a record center to receive the files.</param>
        <param name="submitter">The e-mail address of the submitter.</param>
        <param name="submissionMode">One of the enumeration values that specifies the mode that was used to submit the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> file.</param>
        <summary>Sends the <see cref="T:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object to a records repository.</summary>
        <returns>A <see cref="T:Microsoft.SharePoint.OfficialFileResult" /> object.</returns>
        <remarks>
          <para />
          <para>strAdditionalInfo &lt;info&gt;&lt;url&gt;{Url of the final location of the file}&lt;/url&gt;&lt;/info&gt;</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.DocumentManagement.DocumentSets.DocumentSetVersionCollection VersionCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.DocumentManagement.DocumentSets.DocumentSetVersionCollection VersionCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.VersionCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VersionCollection As DocumentSetVersionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::DocumentManagement::DocumentSets::DocumentSetVersionCollection ^ VersionCollection { Microsoft::Office::DocumentManagement::DocumentSets::DocumentSetVersionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VersionCollection : Microsoft.Office.DocumentManagement.DocumentSets.DocumentSetVersionCollection" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.VersionCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.DocumentManagement.DocumentSets.DocumentSetVersionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of <see cref="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> version snapshots.</summary>
        <value>The version snapshots for the <see cref="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WelcomePageUrl">
      <MemberSignature Language="C#" Value="public virtual string WelcomePageUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WelcomePageUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.WelcomePageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WelcomePageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WelcomePageUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WelcomePageUrl : string" Usage="Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet.WelcomePageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.DocumentManagement</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the relative URL of the Welcome page for the <see cref="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</summary>
        <value>A string representation of the Welcome page for the current <see cref="P:Microsoft.Office.DocumentManagement.DocumentSets.DocumentSet" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
