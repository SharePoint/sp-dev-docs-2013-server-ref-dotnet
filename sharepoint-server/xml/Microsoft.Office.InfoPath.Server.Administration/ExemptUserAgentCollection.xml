<Type Name="ExemptUserAgentCollection" FullName="Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection">
  <TypeSignature Language="C#" Value="public sealed class ExemptUserAgentCollection : Microsoft.SharePoint.Administration.SPPersistedChildCollection&lt;Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent&gt;, Microsoft.SharePoint.Administration.Backup.IBackupRestoreConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExemptUserAgentCollection extends Microsoft.SharePoint.Administration.SPPersistedChildCollection`1&lt;class Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent&gt; implements class Microsoft.SharePoint.Administration.Backup.IBackupRestore, class Microsoft.SharePoint.Administration.Backup.IBackupRestoreConfiguration" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExemptUserAgentCollection&#xA;Inherits SPPersistedChildCollection(Of ExemptUserAgent)&#xA;Implements IBackupRestoreConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExemptUserAgentCollection sealed : Microsoft::SharePoint::Administration::SPPersistedChildCollection&lt;Microsoft::Office::InfoPath::Server::Administration::ExemptUserAgent ^&gt;, Microsoft::SharePoint::Administration::Backup::IBackupRestoreConfiguration" />
  <TypeSignature Language="F#" Value="type ExemptUserAgentCollection = class&#xA;    inherit SPPersistedChildCollection&lt;ExemptUserAgent&gt;&#xA;    interface IBackupRestoreConfiguration&#xA;    interface IBackupRestore" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SharePoint.Administration.SPPersistedChildCollection&lt;Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.SharePoint.Administration.Backup.IBackupRestoreConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("ad1e686e-bc12-42a6-a5be-1eac32eed98b")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A collection of user agents that can receive InfoPath files from InfoPath Forms Services instead of Web pages.</summary>
    <remarks>
      <para>This collection represents search bots that can index or other agents that can access InfoPath files stored on a site. The default <see cref="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection" /> includes:</para>
      <list type="bullet">
        <item>
          <description>crawler</description>
        </item>
        <item>
          <description>googlebot</description>
        </item>
        <item>
          <description>ms search</description>
        </item>
        <item>
          <description>msnbot</description>
        </item>
        <item>
          <description>msoffice</description>
        </item>
        <item>
          <description>slurp</description>
        </item>
      </list>
      <para>These user agents represent search bots that are commonly used in an enterprise environment. If a different search technology is being used and InfoPath files are not being indexed, the user agent for that technology should be added to the collection using the <see cref="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Add(System.String)" /> method of this collection. The InfoPath client is not present in the collection because the client detection logic does not solely rely on the user agent information detected in the HTTP request.</para>
      <para>For more information about user agents, search for the term "user agent" on the Internet.</para>
      <para>
        <b>Note</b>: The SharePoint Foundation command line utility, stsadm.exe, can also be used to add or remove user agents from the collection. The command line syntax is stsadm –o addexemptuseragent –name and stsadm –o removeexemptuseragent –name, where name is the user agent name.</para>
      <para />
    </remarks>
    <example>
      <para>The following example writes the number of <see cref="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent" /> objects and lists them from the collection. References are required in the Visual Studio project to the <b>Microsoft.Office.Server</b>, <b>Microsoft.Office.InfoPath.Server</b>, and <b>Microsoft.SharePoint</b> assemblies.</para>
      <para>
        <b>Note</b>: Browse for the <b>Microsoft.Office.InfoPath.Server</b> assembly at &lt;drive&gt;:\Program Files\Microsoft Office Servers\14.0\Bin. The <b>Microsoft.Office.Server</b> reference is listed as Microsoft Office Server component and the <b>Microsoft.SharePoint</b> reference is listed as Windows SharePoint Services on the .NET tab of the Add Reference dialog box.</para>
      <para>The following <b>import</b> statements are required for the</para>
      <para>
        <see cref="N:Microsoft.Office.Server" />, <see cref="N:Microsoft.Office.InfoPath.Server.Administration" />, and <see cref="N:Microsoft.SharePoint.Administration" /> namespaces:</para>
      <code>    Dim LocalFormsService As FormsService
    Dim LocalFarm As SPFarm
    Dim ExUserAgents As Integer
    Dim ExUserAgent As ExemptUserAgent
    Dim ExUserAgentsCollection As ExemptUserAgentCollection
    
    Try
        LocalFarm = SPFarm.Local
        LocalFormsService = LocalFarm.Services.GetValue(Of FormsService)(FormsService.ServiceName)
        ExUserAgents = LocalFormsService.ExemptUserAgents.Count()
        Console.WriteLine("Number of exempt user agents: " &amp;amp; ExUserAgents.ToString())
        ExUserAgentsCollection = LocalFormsService.&lt;span class="label"&gt;ExemptUserAgents&lt;/span&gt;
        For Each ExUserAgent In ExUserAgentsCollection
            Console.WriteLine(ExUserAgent.Name)
        Next
        Console.Write("Press Enter to Continue")
        Console.ReadLine()
    Catch ex As Exception
        Console.WriteLine("Error: " + ex.Message)
        Console.Write("Press Enter to Continue")
        Console.ReadLine()
    End Try</code>
      <para>The following <b>using</b> statements are required for the <see cref="N:Microsoft.Office.Server" />, <see cref="N:Microsoft.Office.InfoPath.Server.Administration" />, and <see cref="N:Microsoft.SharePoint.Administration" /> namespaces.</para>
      <code>    FormsService localFormsService;
    SPFarm localFarm = SPFarm.Local;
    Int16 exAgents;
    ExemptUserAgentCollection exUserAgentCollection;
    
    try
    {
        localFormsService = localFarm.Services.GetValue&amp;lt;FormsService&amp;gt;(FormsService.ServiceName);
        exAgents = (Int16)localFormsService.ExemptUserAgents.Count;
        Console.WriteLine("Number of exempt user agents: " + exAgents.ToString());
        exUserAgentCollection = localFormsService.&lt;span class="label"&gt;ExemptUserAgents&lt;/span&gt;;
        foreach(ExemptUserAgent exUserAgent in exUserAgentCollection)
        {
            Console.WriteLine(exUserAgent.Name);
        }
        Console.Write("Press Enter to Continue");
        Console.ReadLine();
    }
    catch (Exception ex)
    {
        Console.WriteLine("Error: " + ex.Message);
        Console.Write("Press Enter to Continue");
        Console.ReadLine();
    }</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExemptUserAgentCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExemptUserAgentCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Not for public consumption. Use FormService.GetLocal().ExemptUserAgents instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string partialExemptUserAgent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string partialExemptUserAgent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (partialExemptUserAgent As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ partialExemptUserAgent);" />
      <MemberSignature Language="F#" Value="override this.Add : string -&gt; unit" Usage="exemptUserAgentCollection.Add partialExemptUserAgent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialExemptUserAgent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partialExemptUserAgent">A string representing the user agent to receive InfoPath files instead of a Web page.</param>
        <summary>Adds an <see cref="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent" /> object to the <see cref="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection" /> collection.</summary>
        <remarks>
          <para>Add a user agent to the collection in order to allow the associated search bot to index InfoPath files on the server. This method can accept an <see cref="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent" /> object or a string for a partial match.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As ExemptUserAgent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Office::InfoPath::Server::Administration::ExemptUserAgent ^ default[System::String ^] { Microsoft::Office::InfoPath::Server::Administration::ExemptUserAgent ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent" Usage="Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The <see cref="P:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent.DisplayName" /> of the user agent.</param>
        <summary>Gets an <see cref="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent" /> object from the collection.</summary>
        <value>A <see cref="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgent" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.AddBackupObjects">
      <MemberSignature Language="C#" Value="void IBackupRestore.AddBackupObjects (Microsoft.SharePoint.Administration.Backup.SPBackupRestoreObject parent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.SharePoint.Administration.Backup.IBackupRestore.AddBackupObjects(class Microsoft.SharePoint.Administration.Backup.SPBackupRestoreObject parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#AddBackupObjects(Microsoft.SharePoint.Administration.Backup.SPBackupRestoreObject)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBackupObjects (parent As SPBackupRestoreObject) Implements IBackupRestore.AddBackupObjects" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.SharePoint.Administration.Backup.IBackupRestore.AddBackupObjects(Microsoft::SharePoint::Administration::Backup::SPBackupRestoreObject ^ parent) = Microsoft::SharePoint::Administration::Backup::IBackupRestore::AddBackupObjects;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.AddBackupObjects(Microsoft.SharePoint.Administration.Backup.SPBackupRestoreObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Microsoft.SharePoint.Administration.Backup.SPBackupRestoreObject" />
      </Parameters>
      <Docs>
        <param name="parent">The backup object to which the <see cref="T:Microsoft.SharePoint.Administration.Backup.IBackupRestore" /> objects are added.</param>
        <summary>Adds the <see cref="T:Microsoft.SharePoint.Administration.Backup.IBackupRestore" /> object and its child <see cref="T:Microsoft.SharePoint.Administration.Backup.IBackupRestore" /> objects to the specified backup object. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanRenameOnRestore">
      <MemberSignature Language="C#" Value="bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanRenameOnRestore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanRenameOnRestore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#CanRenameOnRestore" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanRenameOnRestore As Boolean Implements IBackupRestore.CanRenameOnRestore" />
      <MemberSignature Language="C++ CLI" Value="property bool Microsoft::SharePoint::Administration::Backup::IBackupRestore::CanRenameOnRestore { bool get(); };" />
      <MemberSignature Language="F#" Usage="Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanRenameOnRestore" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanRenameOnRestore</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:Microsoft.SharePoint.Administration.Backup.IBackupRestore" /> object can be renamed when it is restored. </summary>
        <value>
          <b>true</b> if renaming is allowed; otherwise, <b>false</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForBackup">
      <MemberSignature Language="C#" Value="bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForBackup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForBackup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#CanSelectForBackup" />
      <MemberSignature Language="VB.NET" Value=" Property CanSelectForBackup As Boolean Implements IBackupRestore.CanSelectForBackup" />
      <MemberSignature Language="C++ CLI" Value="property bool Microsoft::SharePoint::Administration::Backup::IBackupRestore::CanSelectForBackup { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Usage="Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForBackup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForBackup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the content component that is represented by the <see cref="T:Microsoft.SharePoint.Administration.Backup.IBackupRestore" /> object can be selected for backup, independently of its parent component, in the Central Administration user interface or some other UI. </summary>
        <value>
          <b>true</b> if the object can be selected for backup; otherwise, <b>false</b>. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForRestore">
      <MemberSignature Language="C#" Value="bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForRestore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForRestore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#CanSelectForRestore" />
      <MemberSignature Language="VB.NET" Value=" Property CanSelectForRestore As Boolean Implements IBackupRestore.CanSelectForRestore" />
      <MemberSignature Language="C++ CLI" Value="property bool Microsoft::SharePoint::Administration::Backup::IBackupRestore::CanSelectForRestore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Usage="Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForRestore" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.SharePoint.Administration.Backup.IBackupRestore.CanSelectForRestore</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the content component that is represented by the <see cref="T:Microsoft.SharePoint.Administration.Backup.IBackupRestore" /> object can be selected for restoration in the Central Administration user interface or some other UI. </summary>
        <value>
          <b>true</b> if the object can be selected for restoration; otherwise, <b>false</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.DiskSizeRequired">
      <MemberSignature Language="C#" Value="ulong Microsoft.SharePoint.Administration.Backup.IBackupRestore.DiskSizeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 Microsoft.SharePoint.Administration.Backup.IBackupRestore.DiskSizeRequired" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#DiskSizeRequired" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DiskSizeRequired As ULong Implements IBackupRestore.DiskSizeRequired" />
      <MemberSignature Language="C++ CLI" Value="property System::UInt64 Microsoft::SharePoint::Administration::Backup::IBackupRestore::DiskSizeRequired { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Usage="Microsoft.SharePoint.Administration.Backup.IBackupRestore.DiskSizeRequired" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.SharePoint.Administration.Backup.IBackupRestore.DiskSizeRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the amount of disk space, in bytes, that is required to store a backup of the content represented by the <see cref="T:Microsoft.SharePoint.Administration.Backup.IBackupRestore" /> object. </summary>
        <value>The size, in bytes, that is needed on the storage device to save the data.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.Id">
      <MemberSignature Language="C#" Value="Guid Microsoft.SharePoint.Administration.Backup.IBackupRestore.Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Microsoft.SharePoint.Administration.Backup.IBackupRestore.Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#Id" />
      <MemberSignature Language="VB.NET" Value=" Property Id As Guid Implements IBackupRestore.Id" />
      <MemberSignature Language="C++ CLI" Value="property Guid Microsoft::SharePoint::Administration::Backup::IBackupRestore::Id { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Usage="Microsoft.SharePoint.Administration.Backup.IBackupRestore.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.SharePoint.Administration.Backup.IBackupRestore.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an ID for the content component. </summary>
        <value>The ID of the content component that is represented by the <see cref="T:Microsoft.SharePoint.Administration.Backup.IBackupRestore" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.Name">
      <MemberSignature Language="C#" Value="string Microsoft.SharePoint.Administration.Backup.IBackupRestore.Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Microsoft.SharePoint.Administration.Backup.IBackupRestore.Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#Name" />
      <MemberSignature Language="VB.NET" Value=" Property Name As String Implements IBackupRestore.Name" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ Microsoft::SharePoint::Administration::Backup::IBackupRestore::Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="Microsoft.SharePoint.Administration.Backup.IBackupRestore.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.SharePoint.Administration.Backup.IBackupRestore.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a name, for use in a UI, for the content component.</summary>
        <value>The name of the content component that is represented by the <see cref="T:Microsoft.SharePoint.Administration.Backup.IBackupRestore" /> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnAbort">
      <MemberSignature Language="C#" Value="bool IBackupRestore.OnAbort (object sender, Microsoft.SharePoint.Administration.Backup.SPBackupRestoreInformation args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnAbort(object sender, class Microsoft.SharePoint.Administration.Backup.SPBackupRestoreInformation args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#OnAbort(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupRestoreInformation)" />
      <MemberSignature Language="VB.NET" Value="Function OnAbort (sender As Object, args As SPBackupRestoreInformation) As Boolean Implements IBackupRestore.OnAbort" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnAbort(System::Object ^ sender, Microsoft::SharePoint::Administration::Backup::SPBackupRestoreInformation ^ args) = Microsoft::SharePoint::Administration::Backup::IBackupRestore::OnAbort;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnAbort(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupRestoreInformation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="Microsoft.SharePoint.Administration.Backup.SPBackupRestoreInformation" />
      </Parameters>
      <Docs>
        <param name="sender">The object that calls <see cref="M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnAbort(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupRestoreInformation)" />. </param>
        <param name="args">An <see cref="T:Microsoft.SharePoint.Administration.Backup.SPBackupRestoreInformation" /> object that contains data about the operation.</param>
        <summary>Assists in a graceful termination when a user cancels a backup or restore operation. </summary>
        <returns>
          <b>true</b> in all cases.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnBackup">
      <MemberSignature Language="C#" Value="bool IBackupRestore.OnBackup (object sender, Microsoft.SharePoint.Administration.Backup.SPBackupInformation args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnBackup(object sender, class Microsoft.SharePoint.Administration.Backup.SPBackupInformation args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#OnBackup(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupInformation)" />
      <MemberSignature Language="VB.NET" Value="Function OnBackup (sender As Object, args As SPBackupInformation) As Boolean Implements IBackupRestore.OnBackup" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnBackup(System::Object ^ sender, Microsoft::SharePoint::Administration::Backup::SPBackupInformation ^ args) = Microsoft::SharePoint::Administration::Backup::IBackupRestore::OnBackup;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnBackup(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupInformation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="Microsoft.SharePoint.Administration.Backup.SPBackupInformation" />
      </Parameters>
      <Docs>
        <param name="sender">The object that initiated the backup operation. </param>
        <param name="args">An <see cref="T:Microsoft.SharePoint.Administration.Backup.SPBackupInformation" /> object that contains data about the operation. </param>
        <summary>Creates and stores the backup copy of the content component.</summary>
        <returns>
          <b>true</b> if successful; otherwise, <b>false</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnBackupComplete">
      <MemberSignature Language="C#" Value="bool IBackupRestore.OnBackupComplete (object sender, Microsoft.SharePoint.Administration.Backup.SPBackupInformation args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnBackupComplete(object sender, class Microsoft.SharePoint.Administration.Backup.SPBackupInformation args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#OnBackupComplete(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupInformation)" />
      <MemberSignature Language="VB.NET" Value="Function OnBackupComplete (sender As Object, args As SPBackupInformation) As Boolean Implements IBackupRestore.OnBackupComplete" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnBackupComplete(System::Object ^ sender, Microsoft::SharePoint::Administration::Backup::SPBackupInformation ^ args) = Microsoft::SharePoint::Administration::Backup::IBackupRestore::OnBackupComplete;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnBackupComplete(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupInformation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="Microsoft.SharePoint.Administration.Backup.SPBackupInformation" />
      </Parameters>
      <Docs>
        <param name="sender">The object that calls <see cref="M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnBackupComplete(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupInformation)" />.</param>
        <param name="args">An <see cref="T:Microsoft.SharePoint.Administration.Backup.SPBackupInformation" /> object that contains data about the operation.</param>
        <summary>Provides post backup processing.</summary>
        <returns>
          <b>true</b> if successful; otherwise, <b>false</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPostRestore">
      <MemberSignature Language="C#" Value="bool IBackupRestore.OnPostRestore (object sender, Microsoft.SharePoint.Administration.Backup.SPRestoreInformation args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPostRestore(object sender, class Microsoft.SharePoint.Administration.Backup.SPRestoreInformation args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#OnPostRestore(System.Object,Microsoft.SharePoint.Administration.Backup.SPRestoreInformation)" />
      <MemberSignature Language="VB.NET" Value="Function OnPostRestore (sender As Object, args As SPRestoreInformation) As Boolean Implements IBackupRestore.OnPostRestore" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPostRestore(System::Object ^ sender, Microsoft::SharePoint::Administration::Backup::SPRestoreInformation ^ args) = Microsoft::SharePoint::Administration::Backup::IBackupRestore::OnPostRestore;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPostRestore(System.Object,Microsoft.SharePoint.Administration.Backup.SPRestoreInformation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="Microsoft.SharePoint.Administration.Backup.SPRestoreInformation" />
      </Parameters>
      <Docs>
        <param name="sender">The object that calls <see cref="M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPostRestore(System.Object,Microsoft.SharePoint.Administration.Backup.SPRestoreInformation)" />.</param>
        <param name="args">An <see cref="T:Microsoft.SharePoint.Administration.Backup.SPRestoreInformation" /> object that contains data about the operation.</param>
        <summary>Provides post restore processing. </summary>
        <returns>
          <b>true</b> if successful; otherwise, <b>false</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPrepareBackup">
      <MemberSignature Language="C#" Value="bool IBackupRestore.OnPrepareBackup (object sender, Microsoft.SharePoint.Administration.Backup.SPBackupInformation args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPrepareBackup(object sender, class Microsoft.SharePoint.Administration.Backup.SPBackupInformation args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#OnPrepareBackup(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupInformation)" />
      <MemberSignature Language="VB.NET" Value="Function OnPrepareBackup (sender As Object, args As SPBackupInformation) As Boolean Implements IBackupRestore.OnPrepareBackup" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPrepareBackup(System::Object ^ sender, Microsoft::SharePoint::Administration::Backup::SPBackupInformation ^ args) = Microsoft::SharePoint::Administration::Backup::IBackupRestore::OnPrepareBackup;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPrepareBackup(System.Object,Microsoft.SharePoint.Administration.Backup.SPBackupInformation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="Microsoft.SharePoint.Administration.Backup.SPBackupInformation" />
      </Parameters>
      <Docs>
        <param name="sender">The object that initiated the backup operation.</param>
        <param name="args">An <see cref="T:Microsoft.SharePoint.Administration.Backup.SPBackupInformation" /> object that contains data about the operation.  </param>
        <summary>Creates and stores the backup copy of the content component.</summary>
        <returns>
          <b>true</b> if successful; otherwise, <b>false</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPreRestore">
      <MemberSignature Language="C#" Value="bool IBackupRestore.OnPreRestore (object sender, Microsoft.SharePoint.Administration.Backup.SPRestoreInformation args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPreRestore(object sender, class Microsoft.SharePoint.Administration.Backup.SPRestoreInformation args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#OnPreRestore(System.Object,Microsoft.SharePoint.Administration.Backup.SPRestoreInformation)" />
      <MemberSignature Language="VB.NET" Value="Function OnPreRestore (sender As Object, args As SPRestoreInformation) As Boolean Implements IBackupRestore.OnPreRestore" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPreRestore(System::Object ^ sender, Microsoft::SharePoint::Administration::Backup::SPRestoreInformation ^ args) = Microsoft::SharePoint::Administration::Backup::IBackupRestore::OnPreRestore;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPreRestore(System.Object,Microsoft.SharePoint.Administration.Backup.SPRestoreInformation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="Microsoft.SharePoint.Administration.Backup.SPRestoreInformation" />
      </Parameters>
      <Docs>
        <param name="sender">The object that calls <see cref="M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnPreRestore(System.Object,Microsoft.SharePoint.Administration.Backup.SPRestoreInformation)" /></param>
        <param name="args">An <see cref="T:Microsoft.SharePoint.Administration.Backup.SPRestoreInformation" /> object that contains data about the operation.</param>
        <summary>Provides restore preparation processing.</summary>
        <returns>
          <b>true</b> if successful; otherwise, <b>false</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnRestore">
      <MemberSignature Language="C#" Value="bool IBackupRestore.OnRestore (object sender, Microsoft.SharePoint.Administration.Backup.SPRestoreInformation args);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnRestore(object sender, class Microsoft.SharePoint.Administration.Backup.SPRestoreInformation args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestore#OnRestore(System.Object,Microsoft.SharePoint.Administration.Backup.SPRestoreInformation)" />
      <MemberSignature Language="VB.NET" Value="Function OnRestore (sender As Object, args As SPRestoreInformation) As Boolean Implements IBackupRestore.OnRestore" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnRestore(System::Object ^ sender, Microsoft::SharePoint::Administration::Backup::SPRestoreInformation ^ args) = Microsoft::SharePoint::Administration::Backup::IBackupRestore::OnRestore;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnRestore(System.Object,Microsoft.SharePoint.Administration.Backup.SPRestoreInformation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="Microsoft.SharePoint.Administration.Backup.SPRestoreInformation" />
      </Parameters>
      <Docs>
        <param name="sender">The object that called <see cref="M:Microsoft.SharePoint.Administration.Backup.IBackupRestore.OnRestore(System.Object,Microsoft.SharePoint.Administration.Backup.SPRestoreInformation)" />.</param>
        <param name="args">An <see cref="T:Microsoft.SharePoint.Administration.Backup.SPRestoreInformation" /> object that contains data about the operation.</param>
        <summary>Reads the backed up content and copies it to the target destination of the restore operation.</summary>
        <returns>
          <b>true</b> if successful; otherwise, <b>false</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.SharePoint.Administration.Backup.IBackupRestoreConfiguration.CanBackupRestoreAsConfiguration">
      <MemberSignature Language="C#" Value="bool Microsoft.SharePoint.Administration.Backup.IBackupRestoreConfiguration.CanBackupRestoreAsConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Microsoft.SharePoint.Administration.Backup.IBackupRestoreConfiguration.CanBackupRestoreAsConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Microsoft#SharePoint#Administration#Backup#IBackupRestoreConfiguration#CanBackupRestoreAsConfiguration" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanBackupRestoreAsConfiguration As Boolean Implements IBackupRestoreConfiguration.CanBackupRestoreAsConfiguration" />
      <MemberSignature Language="C++ CLI" Value="property bool Microsoft::SharePoint::Administration::Backup::IBackupRestoreConfiguration::CanBackupRestoreAsConfiguration { bool get(); };" />
      <MemberSignature Language="F#" Usage="Microsoft.SharePoint.Administration.Backup.IBackupRestoreConfiguration.CanBackupRestoreAsConfiguration" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.SharePoint.Administration.Backup.IBackupRestoreConfiguration.CanBackupRestoreAsConfiguration</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the component can be included in a configuration-only backup or restore. </summary>
        <value>
          <b>true</b> if users should be given the option to include the component in a configuration-only backup or restore; otherwise, <b>false</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string partialExemptUserAgent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string partialExemptUserAgent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (partialExemptUserAgent As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ partialExemptUserAgent);" />
      <MemberSignature Language="F#" Value="override this.Remove : string -&gt; unit" Usage="exemptUserAgentCollection.Remove partialExemptUserAgent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.InfoPath.Server</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialExemptUserAgent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partialExemptUserAgent">A string representing the user agent to receive InfoPath files instead of a Web page.</param>
        <summary>Removes a user agent from the <see cref="T:Microsoft.Office.InfoPath.Server.Administration.ExemptUserAgentCollection" /> collection.</summary>
        <remarks>
          <para>Remove user agents from the collection by ID or name in order to stop the associated search bot from indexing InfoPath files on the server.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
